<!DOCTYPE html>
<html>
<head>
  <title>Drag the puzzle pieces to create the rocket!</title>
  <style>
  body {
      background-image: url("https://cdn.dribbble.com/userupload/21445372/file/original-8382aa450e31fe028f14ca81a6f915ea.gif"); /* Replace with your image URL */
      background-size: cover; 
      background-repeat: no-repeat;
    }
    
    h1 {
      text-align: center; /* Center the title */
      color: white; /* Ensure the title is white */
      margin-top: 50px;
    }
    
    #game-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin: 20px auto;
    }

    #puzzle-grid {
      display: grid;
      grid-template-columns: repeat(4, 100px);
      grid-template-rows: repeat(4, 100px);
      width: 400px;
      height: 400px;
      border: 2px solid #ccc;
    }
    .grid-square {
      border: 1px solid #ddd;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .image-piece {
      width: 80px;
      height: 80px;
      cursor: grab;
      position: absolute;
    }
    #pieces-container {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      width: 600px;
      margin-top: 20px;
      position: relative;
    }
    #timer {
      position: absolute;
      top: 50px;
      right: 50px;
      font-size: 30px;
      color: white;
    }
    
    #game-over {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: white;
      padding: 20px;
      border: 1px solid #ccc;
      display: none;
      text-align: center;
    }
    #play-button {
      padding: 10px 20px;
      display: block; /* Make it a block-level element */
      margin-left: auto; /* Center horizontally */
      margin-right: auto; /* Center horizontally */
      font-size: 18px;
      cursor: pointer;
      margin-bottom: 20px;
    }
  </style>
</head>
<body>
  <h1>Drag the puzzle pieces to create the rocket!</h1>
  <button id="play-button">Play Now</button>
  <div id="timer">02:00</div>
  <div id="game-container">
    <div id="puzzle-grid"></div>
    <div id="pieces-container"></div>
  </div>
  <div id="game-over">
    <h2>Game Over</h2>
    <p>Time's Up!</p>
    <button onclick="location.reload()">Play Again</button>
  </div>

  <script>
    const puzzleGrid = document.getElementById("puzzle-grid");
    const piecesContainer = document.getElementById("pieces-container");
    const timerDisplay = document.getElementById("timer");
    const gameOverDisplay = document.getElementById("game-over");
    const playButton = document.getElementById("play-button");
    let pieces = [];
    let timeLeft = 120;
    let timerInterval;

    const imageUrls = [
      "https://github.com/LB17GO/DUWITHack/blob/main/ROCKET%201.png?raw=true",
      "https://github.com/LB17GO/DUWITHack/blob/main/ROCKET%202.png?raw=true",
      "https://github.com/LB17GO/DUWITHack/blob/main/Rocket%203.png?raw=true",
      "https://github.com/LB17GO/DUWITHack/blob/main/Rocket%204.png?raw=true",
      "https://github.com/LB17GO/DUWITHack/blob/main/Rocket%205.png?raw=true",
      "https://github.com/LB17GO/DUWITHack/blob/main/Rocket%206.png?raw=true",
      "https://github.com/LB17GO/DUWITHack/blob/main/Rocket%207.png?raw=true",
      "https://github.com/LB17GO/DUWITHack/blob/main/Rocket%208.png?raw=true",
      "https://github.com/LB17GO/DUWITHack/blob/main/Rocket%209.png?raw=true",
      "https://github.com/LB17GO/DUWITHack/blob/main/Rocket%2010.png?raw=true",
      "https://github.com/LB17GO/DUWITHack/blob/main/Rocket%2011.png?raw=true",
      "https://github.com/LB17GO/DUWITHack/blob/main/Rocket%2012.png?raw=true",
      "https://github.com/LB17GO/DUWITHack/blob/main/Rocket%2013.png?raw=true",
      "https://github.com/LB17GO/DUWITHack/blob/main/ROcket%2014.png?raw=true",
      "https://github.com/LB17GO/DUWITHack/blob/main/Rocket%2015.png?raw=true",
      "https://github.com/LB17GO/DUWITHack/blob/main/Rocket%2016.png?raw=true",
    ];

    function createGame() {
      for (let row = 0; row < 4; row++) {
        for (let col = 0; col < 4; col++) {
          const gridSquare = document.createElement("div");
          gridSquare.classList.add("grid-square");
          gridSquare.dataset.row = row;
          gridSquare.dataset.col = col;
          puzzleGrid.appendChild(gridSquare);
        }
      }

      for (let i = 0; i < 16; i++) {
        const piece = document.createElement("img");
        piece.src = imageUrls[i];
        piece.classList.add("image-piece");
        piece.dataset.number = i + 1;
        piece.draggable = true;
        piecesContainer.appendChild(piece);
        pieces.push(piece);

        piece.style.left = `${Math.random() * 500}px`;
        piece.style.top = `${Math.random() * 100}px`;
      }

      pieces.forEach(piece => {
        piece.addEventListener("dragstart", (e) => {
          e.dataTransfer.setData("text/plain", piece.dataset.number);
        });
      });

      puzzleGrid.addEventListener("dragover", (e) => {
        e.preventDefault();
      });

      puzzleGrid.addEventListener("drop", (e) => {
        const number = parseInt(e.dataTransfer.getData("text/plain"));
        const targetSquare = e.target.closest(".grid-square");

        if (targetSquare) {
          const targetRow = parseInt(targetSquare.dataset.row);
          const targetCol = parseInt(targetSquare.dataset.col);
          const expectedNumber = targetRow * 4 + targetCol + 1;

          if (number === expectedNumber) {
            const draggedPiece = pieces.find(p => parseInt(p.dataset.number) === number);
            if (draggedPiece) {
              targetSquare.appendChild(draggedPiece);
              draggedPiece.style.position = "static";
              draggedPiece.style.left = "auto";
              draggedPiece.style.top = "auto";
            }
          }
        }
      });
    }

    function startTimer() {
      timerInterval = setInterval(updateTimer, 1000);
    }

    function updateTimer() {
      timeLeft--;
      const minutes = Math.floor(timeLeft / 60).toString().padStart(2, "0");
      const seconds = (timeLeft % 60).toString().padStart(2, "0");
      timerDisplay.textContent = `${minutes}:${seconds}`;

      if (timeLeft <= 0) {
        stopTimer();
        gameOverDisplay.style.display = "block";
      }
    }

    function stopTimer() {
      clearInterval(timerInterval);
    }

    playButton.addEventListener("click", () => {
      playButton.style.display = "none";
      createGame();
      startTimer();
    });
  </script>
</body>
</html>